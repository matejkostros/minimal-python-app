apiVersion: apps/v1
kind: Deployment
metadata:
  name: minimal-python-app
  labels:
    app: minimal-python-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: minimal-python-app
  template:
    metadata:
      labels:
        app: minimal-python-app
    spec:
      serviceAccountName: minimal-python-app-sa
      containers:
      - name: minimal-python-app
        image: docker.io/library/minimal-python-app:1.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: APP_NAME
          value: "minimal-python-app"
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8080"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: "200m"
            memory: "128Mi"
          requests:
            cpu: "100m"
            memory: "16Mi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: minimal-python-app
  labels:
    app: minimal-python-app
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: minimal-python-app
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: minimal-python-app-nodeport
  labels:
    app: minimal-python-app
spec:
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
    name: http
  selector:
    app: minimal-python-app
  type: NodePort